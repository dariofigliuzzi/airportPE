//
// Generated file, do not edit! Created by nedtool 5.2 from Plane.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __AIRPORT_PLANE_M_H
#define __AIRPORT_PLANE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace airport {

/**
 * Class generated from <tt>Plane.msg:21</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Plane
 * {
 *     int id;
 *     int kind;              //0:Sky 1:Tower
 *     simtime_t time_l;
 *     simtime_t time_p;
 *     simtime_t time_o;
 *     simtime_t enter;
 * }
 * </pre>
 */
class Plane : public ::omnetpp::cPacket
{
  protected:
    int id;
    int kind;
    ::omnetpp::simtime_t time_l;
    ::omnetpp::simtime_t time_p;
    ::omnetpp::simtime_t time_o;
    ::omnetpp::simtime_t enter;

  private:
    void copy(const Plane& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Plane&);

  public:
    Plane(const char *name=nullptr, short kind=0);
    Plane(const Plane& other);
    virtual ~Plane();
    Plane& operator=(const Plane& other);
    virtual Plane *dup() const override {return new Plane(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getId() const;
    virtual void setId(int id);
    virtual int getKind() const;
    virtual void setKind(int kind);
    virtual ::omnetpp::simtime_t getTime_l() const;
    virtual void setTime_l(::omnetpp::simtime_t time_l);
    virtual ::omnetpp::simtime_t getTime_p() const;
    virtual void setTime_p(::omnetpp::simtime_t time_p);
    virtual ::omnetpp::simtime_t getTime_o() const;
    virtual void setTime_o(::omnetpp::simtime_t time_o);
    virtual ::omnetpp::simtime_t getEnter() const;
    virtual void setEnter(::omnetpp::simtime_t enter);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Plane& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Plane& obj) {obj.parsimUnpack(b);}

} // namespace airport

#endif // ifndef __AIRPORT_PLANE_M_H

